// Ender Hale | August 28, 2025 | ShapeGame


// Global Variables
int x, y, w, h, score, tx, ty;
float speed = 5; //pixels per frame
float scale;
float tw;
boolean start = false;
PImage sloth1;
//Hitbox variables
int slothLeft, slothRight, slothTop, slothBottom;
float targetLeft, targetRight, targetTop, targetBottom;

// Key tracking
boolean upPressed = false;
boolean downPressed = false;
boolean leftPressed = false;
boolean rightPressed = false;





// Runs once when the app starts
void setup() {
  size(500, 500);
  background(50, 50, 100);
  frameRate(30);

  //Setting Variables
  x = 20;
  y = 20;
  score = 0;
  w = 60;
  h = 60;
  tx = int(random(width));
  ty = int(random(height));
  tw = 50;
  scale = 0.1;
  sloth1 = loadImage("sloth.png");
}





// Runs on a 30 fps loop
void draw() {
  if(start == true) {
    background(50);
    fill(200,12,188);
    target();
    imageMode(CENTER);
    sloth1.resize(w,h);
    image(sloth1,x,y);
  
 

    //Draw Circle
    //ellipse(x, y, w, h);

     //Circle hitbox
    slothLeft   = x - w/2;
    slothRight  = x + w/2;
    slothTop    = y - h/2;
    slothBottom = y + h/2;

    //Square Hitbox
    targetLeft   = tx - tw/2;
    targetRight  = tx + tw/2;
    targetTop    = ty - tw/2;
    targetBottom = ty + tw/2;

    //Make Target Box
    target();

    //Hitbox Color and Shape For Testing
    pushStyle();
    fill(0,0);
    stroke(0, 0); //invisible
    rect(slothLeft, slothTop, w, h);
    stroke(0, 0); //invisible
    rect(targetLeft, targetTop, tw, tw);
    popStyle();
  
    //Movement
    if (keyPressed) {
      if (upPressed) {
      y-=speed;
    } 
      if (leftPressed) {
      x-=speed;
    } 
      if (downPressed) {
      y+=speed;
    } 
      if (rightPressed) {
      x+=speed;
    }
  
  
    } 
  
    //Collision Detection and Bouncing For Walls
    //if (x>width-w/2 || x<0+w/2) {
      //xspeed = xspeed * -1;
    //}

    //if (y>height-h/2 || y<0+h/2) {
      //speed = yspeed * -1;
    //}
  
    //Collision Detection For Target
    if (slothRight  >= targetLeft &&
      slothLeft   <= targetRight &&
      slothBottom >= targetTop &&
      slothTop    <= targetBottom) {
      println("Hit!");
      score += 1;
      tx = int(random(width-tw));
      ty = int(random(height-tw));
      tw = 50;
      scale *= 1.05;
    }  

    updateScore();
    } else {
      startScreen();
   }
}



//Check If Key Is Being Pressed For Movement
void keyPressed() {
  if (key == 'w' || key == 'W') {
    upPressed = true;
  } 
  if (key == 'a' || key == 'A') {
    leftPressed = true;
  } 
  if (key == 's' || key == 'S') {
    downPressed = true;
  } 
  if (key == 'd' || key == 'D') {
    rightPressed = true;
  }
  if (keyCode == UP) {
    upPressed = true;
  } 
  if (keyCode == DOWN) {
    downPressed = true;
  } 
  if (keyCode == LEFT) {
    leftPressed = true;
  } 
  if (keyCode == RIGHT) {
    rightPressed = true;
  }
  if (keyCode == ' ') {
    start = true;
  }
}


//Check If Key Is Being Released
void keyReleased() {
  if (key == 'w' || key == 'W') {
    upPressed = false;
  } 
  if (key == 'd' || key == 'D') {
    rightPressed = false;
  } 
  if (key == 's' || key == 'S') {
    downPressed = false;
  } 
  if (key == 'a' || key == 'A') {
    leftPressed = false;
  }
    if (keyCode == UP) {
    upPressed = false;
  } 
  if (keyCode == DOWN) {
    downPressed = false;
  } 
  if (keyCode == LEFT) {
    leftPressed = false;
  } 
  if (keyCode == RIGHT) {
    rightPressed = false;
  }
}





void updateScore() {
  textAlign(CENTER);
  fill(127, 127);
  rect(0, 0, width, 30);
  fill(255);
  textSize(30);
  text("Score: " + score, width/2, 25);
}





void target() {
  float d = dist(x, y, tx, ty);
  println(d);
  pushStyle();
  fill(0, 125, 500);
  rectMode(CENTER);
  rect(tx, ty, tw, tw);
  popStyle();
  
  if (tw < 2) {
    gameOver();
  } else {
    tw -= scale;
  }
}





void gameOver() {
  background(0);
  fill(255);
  text("Game Over",width/2, height/2);
  noLoop();
}





void startScreen() {
  background(260,100,180);
  textAlign(CENTER, CENTER);
  textSize(50);
  text("Shape Game", width/2, height/2-40);
  textSize(20);
  text("Press Spacebar To Start", width/2, height/2+20);
}
